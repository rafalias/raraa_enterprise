{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\coding tutorial\\\\raraa_react\\\\src\\\\Payment.js\";\nimport React, { useEffect, useState } from 'react';\nimport CheckoutProducts from './CheckoutProducts';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useElements, useStripe, CardElement } from '@stripe/react-stripe-js';\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./reducer\";\nimport axios from \"./axios\";\n\nfunction Payment() {\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setclientSecret] = useState(true);\n  const [succeeded, setsucceeded] = useState(false);\n  const [processing, setprocessing] = useState(\"\");\n  useEffect(() => {\n    //generate the special stripe secret which allows us to charge a customer\n    const getclientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        url: `/payment/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setclientSecret(response.data.clientSecret);\n    };\n\n    getclientSecret();\n  }, [basket]);\n  console.log('the secret is >>>', clientSecret);\n\n  const handleSubmit = async e => {\n    //stripe stuff\n    e.preventDefault();\n    setprocessing(true);\n    const payLoad = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      //payment confirmation\n      setsucceeded(true);\n      setError(null);\n      setprocessing(false);\n      history.replaceState('/orders');\n    });\n  };\n\n  const handleChange = e => {\n    // display the changes in card elemnt \n    //display if there is any error\n    setDisabled(e.empty);\n    setError(e.error ? e.error.message : \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Checkout(\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, basket === null || basket === void 0 ? void 0 : basket.length, \" items\"), \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Delivery Address\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, user === null || user === void 0 ? void 0 : user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"A-15-11\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"PJ MIDTOWN\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Review items and delivery\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, basket.map(item => /*#__PURE__*/React.createElement(CheckoutProducts, {\n    id: item.id,\n    title: item.title,\n    image: item.image,\n    price: item.price,\n    rating: item.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Payment Method\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_priceContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n    renderText: value => /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, \"Order Total: \", value),\n    decimalScale: 2,\n    value: getBasketTotal(basket),\n    displayType: \"text\",\n    thousandSeparator: true,\n    prefix: \"RM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: processing || disabled || succeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 57\n    }\n  }, \"Processing\") : \"Buy Now\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 39\n    }\n  }, error))))));\n}\n\nexport default Payment;","map":{"version":3,"sources":["C:/Users/acer/Desktop/coding tutorial/raraa_react/src/Payment.js"],"names":["React","useEffect","useState","CheckoutProducts","useStateValue","Link","useHistory","useElements","useStripe","CardElement","CurrencyFormat","getBasketTotal","axios","Payment","basket","user","dispatch","stripe","elements","history","error","setError","disabled","setDisabled","clientSecret","setclientSecret","succeeded","setsucceeded","processing","setprocessing","getclientSecret","response","method","url","data","console","log","handleSubmit","e","preventDefault","payLoad","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","replaceState","handleChange","empty","message","length","email","map","item","id","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport CheckoutProducts from './CheckoutProducts';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useElements, useStripe, CardElement } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport {getBasketTotal} from \"./reducer\";\r\nimport axios from \"./axios\";\r\n\r\n\r\nfunction Payment() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    const stripe =useStripe();\r\n    const elements = useElements();\r\n    const history = useHistory();\r\n\r\n    const[error, setError] = useState(null);\r\n    const[disabled, setDisabled] = useState(true)\r\n    const[clientSecret, setclientSecret] = useState(true)\r\n\r\n    const[succeeded, setsucceeded] = useState(false)\r\n    const[processing, setprocessing] = useState(\"\")\r\n\r\n    useEffect(() =>{\r\n            //generate the special stripe secret which allows us to charge a customer\r\n\r\n            const getclientSecret = async () => {\r\n                const response = await axios({\r\n                    method: 'post',\r\n                    url: `/payment/create?total=${getBasketTotal(basket) * 100}`\r\n                })\r\n                setclientSecret(response.data.clientSecret)\r\n            }\r\n            getclientSecret();\r\n    }, [basket])\r\n\r\n console.log('the secret is >>>', clientSecret)\r\n\r\n    const handleSubmit =async (e) =>{\r\n            //stripe stuff\r\n            e.preventDefault();\r\n            setprocessing(true);\r\n            \r\n\r\n            const payLoad = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method:{\r\n                    card: elements.getElement(CardElement)\r\n                }\r\n            }).then(({paymentIntent}) => {\r\n            //payment confirmation\r\n\r\n\r\n            setsucceeded(true)\r\n            setError(null)\r\n            setprocessing(false)\r\n            \r\n            history.replaceState('/orders')})\r\n    }\r\n\r\n    const handleChange = e =>{\r\n        // display the changes in card elemnt \r\n        //display if there is any error\r\n        setDisabled(e.empty);\r\n        setError(e.error ? e.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className = 'payment_container'>\r\n            <h1>\r\n            Checkout(\r\n                <Link to =\"/checkout\">{basket?.length} items</Link>\r\n            )\r\n                \r\n            </h1>\r\n                \r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment_address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>A-15-11</p>\r\n                        <p>PJ MIDTOWN</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment_items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProducts\r\n                             id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                        />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='payment_section'>\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        {/*stripe*/}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n                            <div className = 'payment_priceContainer'>\r\n                                <CurrencyFormat\r\n                                    renderText = {(value) => (\r\n                                    <h3>Order Total: {value}</h3>\r\n                                )}\r\n                                decimalScale={2}\r\n                                value={getBasketTotal(basket)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"RM\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}