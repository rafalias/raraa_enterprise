{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; //reducer is WAY to dispatch action into data layer(push data) and every component also can access from data layer(pull data)\n//Selector\n//reduce is a function iteraTe thru Basket tally up the total\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketitem => basketitem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`cant remove (id: ${action.id}`);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/acer/Desktop/coding tutorial/raraa_react/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","basketitem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAC,EADiB;AAExBC,EAAAA,IAAI,EAAC;AAFmB,CAArB,C,CAKP;AAEA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAqD,CAArD,CADG;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFX,OAAN;;AAIJ,SAAK,eAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFR,QAAAA,MAAM,EAAC,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFL,OAAN;;AAIJ,SAAK,oBAAL;AACQ,YAAMM,KAAK,GAAGH,KAAK,CAACR,MAAN,CAAaY,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACR,MAAV,CAAhB;;AACA,UAAKW,KAAK,IAAI,CAAd,EAAgB;AACZI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AACH,OAFD,MAGI;AACAM,QAAAA,OAAO,CAACC,IAAR,CAAc,oBAAmBT,MAAM,CAACK,EAAG,EAA3C;AACH;;AAET;AACI,aAAON,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket:[],\r\n    user:null\r\n};\r\n\r\n//reducer is WAY to dispatch action into data layer(push data) and every component also can access from data layer(pull data)\r\n\r\n//Selector\r\n//reduce is a function iteraTe thru Basket tally up the total\r\nexport const getBasketTotal = (basket) =>\r\n    basket?.reduce((amount, item) => item.price + amount,0);\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        case \"ADD_TO_BASKET\":\r\n            return{\r\n                ...state,\r\n                basket:[...state.basket, action.item],\r\n            };\r\n        case \"REMOVE_FROM_BASKET\":\r\n                const index = state.basket.findIndex(\r\n                    (basketitem) => basketitem.id === action.id\r\n                );\r\n                let newBasket = [...state.basket];\r\n                if ( index >= 0){\r\n                    newBasket.splice(index,1)\r\n                }\r\n                else{\r\n                    console.warn(`cant remove (id: ${action.id}`)\r\n                }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}