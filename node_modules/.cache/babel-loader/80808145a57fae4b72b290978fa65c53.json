{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\acer\\\\Desktop\\\\coding tutorial\\\\raraa_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\acer\\\\Desktop\\\\coding tutorial\\\\raraa_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\acer\\\\Desktop\\\\coding tutorial\\\\raraa_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import CheckoutProducts from'./CheckoutProducts';import'./Payment.css';import{useStateValue}from'./StateProvider';import{Link,useHistory}from'react-router-dom';import{useElements,useStripe,CardElement}from'@stripe/react-stripe-js';import CurrencyFormat from\"react-currency-format\";import{getBasketTotal}from\"./reducer\";import axios from\"./axios\";import{db}from\"./firebase\";function Payment(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],basket=_useStateValue2$.basket,user=_useStateValue2$.user,dispatch=_useStateValue2[1];var stripe=useStripe();var elements=useElements();var history=useHistory();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),disabled=_useState4[0],setDisabled=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),clientSecret=_useState6[0],setclientSecret=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),succeeded=_useState8[0],setsucceeded=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),processing=_useState10[0],setprocessing=_useState10[1];useEffect(function(){//generate the special stripe secret which allows us to charge a customer\n//if the basket change, clientSecret is update\nvar getclientSecret=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:'post',//Stripe expects the total in a currencies subunits\nurl:\"/payment/create?total=\".concat(getBasketTotal(basket)*10)});case 2:response=_context.sent;setclientSecret(response.data.clientSecret);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getclientSecret(){return _ref.apply(this,arguments);};}();getclientSecret();},[basket]);console.log('the secret is >>>',clientSecret);console.log('the user ID is >>>',user===null||user===void 0?void 0:user.id);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var payLoad;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://stripe stuff\ne.preventDefault();setprocessing(true);_context2.next=4;return stripe.confirmCardPayment(clientSecret,{payment_method:{card:elements.getElement(CardElement)}}).then(function(_ref3){var paymentIntent=_ref3.paymentIntent;//payment confirmation = payment intent\ndb.collection('users').doc(user===null||user===void 0?void 0:user.uid).collection('orders').doc(paymentIntent.id).set({basket:basket,amount:paymentIntent.amount,created:paymentIntent.created});setsucceeded(true);setError(null);setprocessing(false);dispatch({type:'EMPTY_BASKET'});history.replace('/orders');});case 4:payLoad=_context2.sent;case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(e){// display the changes in card elemnt \n//display if there is any error\nsetDisabled(e.empty);//if form empty\nsetError(e.error?e.error.message:\"\");//if error show error\n};return/*#__PURE__*/React.createElement(\"div\",{className:\"payment\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment_container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Checkout(\",/*#__PURE__*/React.createElement(Link,{to:\"/checkout\"},basket===null||basket===void 0?void 0:basket.length,\" items\"),\")\"),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment_title\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Delivery Address\")),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_address\"},/*#__PURE__*/React.createElement(\"p\",null,user===null||user===void 0?void 0:user.email),/*#__PURE__*/React.createElement(\"p\",null,\"A-15-11\"),/*#__PURE__*/React.createElement(\"p\",null,\"PJ MIDTOWN\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment_title\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Review items and delivery\")),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_items\"},basket.map(function(item){return/*#__PURE__*/React.createElement(CheckoutProducts,{id:item.id,title:item.title,image:item.image,price:item.price,rating:item.rating});}))),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"payment_title\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Payment Method\")),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_details\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(CardElement,{onChange:handleChange}),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_priceContainer\"},/*#__PURE__*/React.createElement(CurrencyFormat,{renderText:function renderText(value){return/*#__PURE__*/React.createElement(\"h3\",null,\"Order Total: \",value);},decimalScale:2,value:getBasketTotal(basket),displayType:\"text\",thousandSeparator:true,prefix:\"RM\"}),/*#__PURE__*/React.createElement(\"button\",{disabled:processing||disabled||succeeded},/*#__PURE__*/React.createElement(\"span\",null,processing?/*#__PURE__*/React.createElement(\"p\",null,\"Processing\"):\"Buy Now\"))),error&&/*#__PURE__*/React.createElement(\"div\",null,error))))));}export default Payment;","map":{"version":3,"sources":["C:/Users/acer/Desktop/coding tutorial/raraa_react/src/Payment.js"],"names":["React","useEffect","useState","CheckoutProducts","useStateValue","Link","useHistory","useElements","useStripe","CardElement","CurrencyFormat","getBasketTotal","axios","db","Payment","basket","user","dispatch","stripe","elements","history","error","setError","disabled","setDisabled","clientSecret","setclientSecret","succeeded","setsucceeded","processing","setprocessing","getclientSecret","method","url","response","data","console","log","id","handleSubmit","e","preventDefault","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","set","amount","created","type","replace","payLoad","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport CheckoutProducts from './CheckoutProducts';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useElements, useStripe, CardElement } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport {getBasketTotal} from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db} from \"./firebase\";\r\n\r\n\r\nfunction Payment() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n\r\n    const stripe =useStripe();\r\n    const elements = useElements();\r\n    const history = useHistory();\r\n\r\n    const[error, setError] = useState(null);\r\n    const[disabled, setDisabled] = useState(true)\r\n    const[clientSecret, setclientSecret] = useState(true)\r\n\r\n    const[succeeded, setsucceeded] = useState(false)\r\n    const[processing, setprocessing] = useState(\"\")\r\n\r\n    useEffect(() =>{\r\n            //generate the special stripe secret which allows us to charge a customer\r\n            //if the basket change, clientSecret is update\r\n\r\n            const getclientSecret = async () => {\r\n                const response = await axios({\r\n                    method: 'post',\r\n                    //Stripe expects the total in a currencies subunits\r\n                    url: `/payment/create?total=${getBasketTotal(basket) * 10}`\r\n                })\r\n                setclientSecret(response.data.clientSecret)\r\n            }\r\n            getclientSecret();\r\n    }, [basket])\r\n\r\n console.log('the secret is >>>', clientSecret)\r\n console.log('the user ID is >>>', user?.id)\r\n\r\n    const handleSubmit =async (e) =>{\r\n            //stripe stuff\r\n            e.preventDefault();\r\n            setprocessing(true);\r\n            \r\n\r\n            const payLoad = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method:{\r\n                    card: elements.getElement(CardElement)\r\n                }\r\n            }).then(({paymentIntent}) => {\r\n            //payment confirmation = payment intent\r\n            \r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .doc(paymentIntent.id).set({\r\n                basket: basket,\r\n                amount: paymentIntent.amount,\r\n                created: paymentIntent.created\r\n            }) \r\n\r\n            setsucceeded(true)\r\n            setError(null)\r\n            setprocessing(false)\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n            \r\n            history.replace('/orders')\r\n        })\r\n    }\r\n\r\n    const handleChange = e =>{\r\n        // display the changes in card elemnt \r\n        //display if there is any error\r\n        setDisabled(e.empty); //if form empty\r\n        setError(e.error ? e.error.message : \"\"); //if error show error\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className = 'payment_container'>\r\n            <h1>\r\n            Checkout(\r\n                <Link to =\"/checkout\">{basket?.length} items</Link>\r\n            )\r\n                \r\n            </h1>\r\n                \r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment_address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>A-15-11</p>\r\n                        <p>PJ MIDTOWN</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment_items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProducts\r\n                             id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                        />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='payment_section'>\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        {/*stripe*/}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n                            <div className = 'payment_priceContainer'>\r\n                                <CurrencyFormat\r\n                                    renderText = {(value) => (\r\n                                    <h3>Order Total: {value}</h3>\r\n                                )}\r\n                                decimalScale={2}\r\n                                value={getBasketTotal(basket)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"RM\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}